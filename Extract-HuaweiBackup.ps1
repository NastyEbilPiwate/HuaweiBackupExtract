param(
    #The .db file generated by Huawei Backup that you want to extract.
    [Parameter(Mandatory)][string]$BackupFile,
    #The directory to extract the contents of the backup into.
    [Parameter(Mandatory)][string]$ExtractDir
)

if (!(Get-Module PSSQLite))
{
    Import-Module PSSQLite
}

#The apk_file_info table contains the file and directory names. Directories all have a file_index of -1, files just have a sequential index number.

$file_structure = Invoke-SqliteQuery -DataSource $BackupFile -Query "SELECT * FROM apk_file_info"

#Create directory structure.
$file_structure | %{
    if ($_.file_index -eq -1)
    {
        $dirpath = Join-Path $ExtractDir $_.file_path
        if (!(Test-Path $dirpath))
        {
            New-Item -ItemType Directory -Path $dirpath
        }
    }
}

foreach ($file in $file_structure)
{
    if ($file.file_index -ne -1) #A file_index that isn't -1 means it's a file not a directory, and we need to extract the contents of it.
    {
        #Each file is stored as a series of chunks, each up to 8192 bytes in size. The data_index tells us which order the chunks need to be re-assembled in.
        $file_data_records = Invoke-SqliteQuery -DataSource $BackupFile -Query "SELECT * FROM apk_file_data WHERE file_index = '$($file.file_index)' ORDER BY data_index ASC"

        $outfilepath = Join-Path $ExtractDir $file.file_path
        $outfile = [System.IO.File]::OpenWrite($outfilepath)

        Write-Verbose "Extracting $($file.file_path)"
        #Write the data chunks out to the file.
        $file_data_records | %{ $outfile.Write($_.file_data, 0, $_.file_length) }

        $outfile.Close()
    }
}